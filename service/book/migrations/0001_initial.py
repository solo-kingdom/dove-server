# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-07-20 07:52
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='未命名书籍', max_length=300, null=True, verbose_name='书名')),
                ('summary', models.TextField(blank=True, default='', max_length=10000, verbose_name='简介')),
                ('pic', models.CharField(default='', max_length=300, null=True, verbose_name='本地图片地址')),
            ],
        ),
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='作者名称')),
                ('description', models.TextField(blank=True, default='', max_length=10000, null=True, verbose_name='作者描述')),
            ],
        ),
        migrations.CreateModel(
            name='BookInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_title', models.CharField(default='', max_length=300, null=True, verbose_name='原作名')),
                ('subtitle', models.CharField(default='', max_length=300, null=True)),
                ('binding', models.CharField(default='', max_length=50, verbose_name='装帧')),
                ('catalog', models.TextField(blank=True, default='', max_length=10000, null=True, verbose_name='目录')),
                ('pages', models.CharField(default='', max_length=50, null=True, verbose_name='页数')),
                ('publisher', models.CharField(default='', max_length=300, null=True, verbose_name='出版社')),
                ('isbn', models.CharField(default='', max_length=50, null=True)),
                ('url', models.CharField(default='', max_length=300, null=True, verbose_name='豆瓣链接')),
                ('pic_url', models.CharField(default='', max_length=500, null=True, verbose_name='豆瓣图片下载地址')),
                ('douban_id', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='在豆瓣中的id')),
                ('price', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='定价')),
                ('pubdate', models.CharField(default='', max_length=50, null=True, verbose_name='出版日期')),
                ('translator', models.ManyToManyField(to='book.BookAuthor')),
            ],
        ),
        migrations.CreateModel(
            name='BookKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='关键词')),
                ('weight', models.FloatField(default=0.0, verbose_name='权重')),
            ],
        ),
        migrations.CreateModel(
            name='BookList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='未命名书单', max_length=200, verbose_name='书单名称')),
                ('summary', models.TextField(blank=True, default='', max_length=10000, verbose_name='书单简介')),
                ('pic', models.CharField(default='no-pic.jpg', max_length=300, null=True, verbose_name='书单图片')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='书单创建时间')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='最后添加书籍时间')),
                ('books', models.ManyToManyField(blank=True, to='book.Book')),
            ],
        ),
        migrations.CreateModel(
            name='BookListTagShip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0, verbose_name='书单包含标签次数')),
                ('booklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.BookList')),
            ],
        ),
        migrations.CreateModel(
            name='BookRecommend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.FloatField(default=0.0, verbose_name='推荐度')),
                ('recommend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.Book')),
            ],
        ),
        migrations.CreateModel(
            name='BookRemark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, default='', max_length=10000, verbose_name='评语')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.Book')),
            ],
        ),
        migrations.CreateModel(
            name='BookScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.CharField(default='0.0', max_length=50, null=True, verbose_name='平均分')),
                ('people_count', models.CharField(default=0, max_length=50, null=True, verbose_name='评论人数')),
                ('max', models.CharField(default='0', max_length=50, null=True, verbose_name='最高评分')),
                ('min', models.CharField(default='0', max_length=50, null=True, verbose_name='最低评分')),
            ],
        ),
        migrations.CreateModel(
            name='BookSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200, verbose_name='名称')),
                ('douban_id', models.CharField(default='', max_length=50, verbose_name='豆瓣中id')),
                ('books', models.ManyToManyField(to='book.Book')),
            ],
        ),
        migrations.CreateModel(
            name='BookTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('count', models.IntegerField(default=0, verbose_name='书籍数量')),
            ],
        ),
        migrations.CreateModel(
            name='BookTagShip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0, verbose_name='图书包含标签次数')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.Book')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.BookTag')),
            ],
        ),
        migrations.CreateModel(
            name='HotTagCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('tags', models.ManyToManyField(to='book.BookTag')),
            ],
        ),
        migrations.CreateModel(
            name='SearchTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('search_keyword', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('search_start', models.IntegerField(default=0)),
                ('total', models.IntegerField(default=100)),
            ],
        ),
        migrations.AddField(
            model_name='bookremark',
            name='booklist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.BookTag'),
        ),
        migrations.AddField(
            model_name='booklisttagship',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.BookTag'),
        ),
        migrations.AddField(
            model_name='booklist',
            name='tags',
            field=models.ManyToManyField(through='book.BookListTagShip', to='book.BookTag'),
        ),
        migrations.AddField(
            model_name='booklist',
            name='user',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='author',
            field=models.ManyToManyField(to='book.BookAuthor'),
        ),
        migrations.AddField(
            model_name='book',
            name='info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='book.BookInfo'),
        ),
        migrations.AddField(
            model_name='book',
            name='keywords',
            field=models.ManyToManyField(to='book.BookKeyword'),
        ),
        migrations.AddField(
            model_name='book',
            name='recommends',
            field=models.ManyToManyField(to='book.BookRecommend'),
        ),
        migrations.AddField(
            model_name='book',
            name='score',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='book.BookScore'),
        ),
        migrations.AddField(
            model_name='book',
            name='tags',
            field=models.ManyToManyField(through='book.BookTagShip', to='book.BookTag'),
        ),
    ]
